// Esquema Prisma para VIRA - Sistema de Noticieros Automáticos

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/vira/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Tabla de usuarios para autenticación
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Modelos específicos de VIRA

// Estaciones de radio
model RadioStation {
  id            String     @id @default(cuid())
  name          String     @unique
  slug          String     @unique
  description   String?
  isActive      Boolean    @default(true)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  // Relaciones
  newsReports   NewsReport[]
  tokenUsage    TokenUsage[]
  campaigns     AdCampaign[]
  
  @@map("radio_stations")
}

// Reportes/Noticieros generados
model NewsReport {
  id              String      @id @default(cuid())
  title           String
  content         String      @db.Text
  audioUrl        String?
  duration        Int?        // en segundos
  status          String      @default("generated") // generated, published, archived
  generationCost  Float       @default(0)
  tokenCount      Int         @default(0)
  createdAt       DateTime    @default(now())
  publishedAt     DateTime?
  
  // Relaciones
  radioStationId  String
  radioStation    RadioStation @relation(fields: [radioStationId], references: [id])
  
  @@map("news_reports")
}

// Uso de tokens por tipo y estación
model TokenUsage {
  id              String    @id @default(cuid())
  radioStationId  String
  tokenType       String    // extraction, curation, audio
  tokenCount      Int
  cost            Float
  date            DateTime  @default(now())
  
  // Relaciones
  radioStation    RadioStation @relation(fields: [radioStationId], references: [id])
  
  @@map("token_usage")
}

// Campañas publicitarias
model AdCampaign {
  id              String      @id @default(cuid())
  name            String
  description     String?
  isActive        Boolean     @default(true)
  reproductions   Int         @default(0)
  startDate       DateTime
  endDate         DateTime?
  createdAt       DateTime    @default(now())
  
  // Relaciones
  radioStationId  String
  radioStation    RadioStation @relation(fields: [radioStationId], references: [id])
  
  @@map("ad_campaigns")
}

// Métricas diarias del sistema
model DailyMetrics {
  id                    String    @id @default(cuid())
  date                  DateTime  @unique @db.Date
  totalNewsReports      Int       @default(0)
  totalCost             Float     @default(0)
  totalTokens           Int       @default(0)
  extractionTokens      Int       @default(0)
  curationTokens        Int       @default(0)
  audioTokens           Int       @default(0)
  extractionCost        Float     @default(0)
  curationCost          Float     @default(0)
  audioCost             Float     @default(0)
  mostActiveRadio       String?
  
  @@map("daily_metrics")
}
